name: Code Quality Checks & Deployment

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - synchronize

jobs:
  pr-lints-and-code-quality-checks:
    name: PR Lints and Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: validate pr title
        uses: seferov/pr-lint-action@master
        with:
          title-regex: '^(feat|fix|style|refactor|test)\((frontend|backend|config|pipeline)\): [a-z].+$|^(docs|chore): [a-z].+$'
          title-regex-flags: 'g'
          error-message: 'Refer to the confluence page for the rules on PR titles'
      - name: checkout repo
        uses: actions/checkout@v4
      - name: setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: run lints
        run: yarn lint
      - name: check prettier formatting
        run: yarn format
      - name: run tests enforcing coverage threshold
        run: yarn test:all-c

  deploy-frontend-preview:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: pr-lints-and-code-quality-checks

    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: install vercel cli
        run: yarn global add vercel
      - name: link vercel project
        run: vercel link --yes --project preview-injection-moulding-configurator --token=${{ secrets.VERCEL_TOKEN }}
      - name: pull vercel project settings
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: build project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: deploy to vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  deploy-frontend-production:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: pr-lints-and-code-quality-checks

    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: install vercel cli
        run: yarn global add vercel
      - name: link vercel project
        run: vercel link --yes --project injection-moulding-configurator --token=${{ secrets.VERCEL_TOKEN }}
      - name: pull vercel project settings
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: build project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: deploy to vercel (production)
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  deploy-backend:
    runs-on: ubuntu-latest
    needs: pr-lints-and-code-quality-checks

    steps:
      - name: deploy to render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true
